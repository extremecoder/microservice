name: Install ALB Controller and Deploy Service

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.28.0'

    - name: Install eksctl
      run: |
        curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
        sudo mv /tmp/eksctl /usr/local/bin
        eksctl version

    - name: Update kubeconfig for EKS
      run: aws eks update-kubeconfig --region us-east-1 --name eks1

    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: 'v3.12.3'

    - name: Clean up previous ALB controller installation
      run: |
        # Thoroughly clean up previous controller installation
        helm uninstall aws-load-balancer-controller -n kube-system || echo "No Helm release to uninstall"
        
        # Remove all related resources
        kubectl delete deployment aws-load-balancer-controller -n kube-system --ignore-not-found
        kubectl delete service aws-load-balancer-webhook-service -n kube-system --ignore-not-found
        kubectl delete mutatingwebhookconfiguration aws-load-balancer-webhook --ignore-not-found
        kubectl delete validatingwebhookconfiguration aws-load-balancer-webhook --ignore-not-found
        kubectl delete clusterrole aws-load-balancer-controller-role --ignore-not-found
        kubectl delete clusterrolebinding aws-load-balancer-controller-rolebinding --ignore-not-found
        
        # Clean up CRDs
        kubectl delete crd ingressclassparams.elbv2.k8s.aws --ignore-not-found
        kubectl delete crd targetgroupbindings.elbv2.k8s.aws --ignore-not-found
        
        # Give system time to clean up resources
        sleep 10

    - name: Create IAM Policy for ALB Controller
      run: |
        curl -o iam-policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/main/docs/install/iam_policy.json
        aws iam create-policy \
            --policy-name AWSLoadBalancerControllerIAMPolicy \
            --policy-document file://iam-policy.json || echo "Policy may already exist"

    - name: Get AWS Account ID
      id: get-aws-account
      run: |
        AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)
        echo "account_id=$AWS_ACCOUNT_ID" >> $GITHUB_OUTPUT

    - name: Create Service Account
      run: |
        eksctl create iamserviceaccount \
          --cluster=eks1 \
          --namespace=kube-system \
          --name=aws-load-balancer-controller \
          --attach-policy-arn=arn:aws:iam::${{ steps.get-aws-account.outputs.account_id }}:policy/AWSLoadBalancerControllerIAMPolicy \
          --override-existing-serviceaccounts \
          --approve || echo "Service account creation failed, but continuing"

    - name: Install cert-manager
      run: |
        kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.13.1/cert-manager.yaml
        echo "Waiting for cert-manager to be ready..."
        kubectl wait --for=condition=Available deployment --all -n cert-manager --timeout=180s || true

    - name: Install ALB Controller CRDs
      run: |
        kubectl apply -k "github.com/aws/eks-charts/stable/aws-load-balancer-controller/crds?ref=master"
        # Give the CRDs time to be properly registered
        sleep 10

    - name: Install ALB Controller
      run: |
        # Add and update Helm repo
        helm repo add eks https://aws.github.io/eks-charts
        helm repo update
        
        # Get VPC ID
        VPC_ID=$(aws eks describe-cluster --name eks1 --query "cluster.resourcesVpcConfig.vpcId" --output text)
        
        # Install controller with a different release name to avoid conflicts
        helm install aws-lb-controller eks/aws-load-balancer-controller \
          -n kube-system \
          --set clusterName=eks1 \
          --set serviceAccount.create=false \
          --set serviceAccount.name=aws-load-balancer-controller \
          --set region=us-east-1 \
          --set vpcId=$VPC_ID
        
        # Wait for controller to become ready
        echo "Waiting for AWS Load Balancer Controller to be ready..."
        sleep 30
        kubectl wait --for=condition=Available deployment aws-lb-controller-aws-load-balancer-controller -n kube-system --timeout=120s || true
        kubectl get deployment -n kube-system aws-lb-controller-aws-load-balancer-controller || kubectl get deployment -n kube-system -l app.kubernetes.io/name=aws-load-balancer-controller

    - name: Deploy Quantum Microservice
      run: |
        # Create IBM Quantum secret if needed
        kubectl create secret generic ibm-quantum-secret \
          --from-literal=token=${{ secrets.IBM_QUANTUM_TOKEN }} \
          --dry-run=client -o yaml | kubectl apply -f -
          
        # Apply the updated manifest
        kubectl apply -f k8s/quantum-microservice-k8s-deployment.yaml
        
    - name: Get Ingress Address
      run: |
        echo "Waiting for ALB to be provisioned (this may take a few minutes)..."
        sleep 90
        kubectl get ingress quantum-microservice-ingress